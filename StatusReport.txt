TEAM 16: STATUS REPORT 1

1. What we accomplished during the week:

        Ability to live scan a barcode using QuaggaJS Barcode Scanner API.

        Option to upload a file from a device for static barcode scanning as
        well as the option to preview this file before submission.

        File created sending ingredients list to spoonacular API and returning 
        recipe list.

        Began working on MongoDB.

2. Challenges and issues faced during the week:

        Laptop crashed with weird question mark folder appearing.

        Spoonacular file will be pushed when laptop is returned.

3. Goals for next week:

        Continue to work on MongoDB and begin work on decoder.

        We are also hoping that Patti Klos from Tufts Dining will reply to our 
        email requesting TUFTS API. Need access to barcodes of items in either
        Dewick or Hodgdon. If for some reason we do not receive this, we can 
        use UPCdatabase API for example barcodes instead.

        Work on barcode decoder portion using QuaggaJS API. Be able to receive
        image of barcode from a camera.

        Preference back camera to scan barcode if device has two cameras.

 # Comments by Ming
 * Again, off-the-record, working with Tufts can be painfully slow (to put it in a nice way).  If you do a sample (read: not the entire food database or barcode database, but just a few samples), that would be great.  Don't aim for perfection.
 
*******************************************************************************

TEAM 16: STATUS REPORT 2

1. What we accomplished during the week:
        
        Decoder for QuaggaJS Barcode Scanner API can now accept images from 
        both a file and directly from a camera. 

        Mongo Database now compatible with heroku

        Mongo Database now will updates and inserts items based on name and expiration date.


2. Challenges and issues faced during the week:

        Having trouble getting access to files inputted in for the decoder.
        Need to delve deeper into the documentation of the file type in HTML
        and how to save file paths

3. Goals for next week:

        Send the decoded database that holds associative food item and 
        determine food items scanned

        make a reduce quantity for mongodb

*******************************************************************************

TEAM 16: STATUS REPORT 3

1. What we accomplished during the week:

        Updated the update function for mongodb--> possible to reduce quantity
        made remove function. Part of the update function --> auto removes quanities of 0

        Decoder can decode barcode from live stream and output to HTML

2. Challenges and issues faced during the week:

        Body parser not working when there's an array in an object being passed to post \ingredients

        Barcode scanner not working on static images. Even the example on API
        website does not seem to work, whch probably means the API needs an 
        update to fix bugs. Author of API contacted. If we don't hear back
        in the next couple days, we will remove option to decode from static
        input file.

3. Goals for next week:

       Finish the \ingredients post and make a get \ingredients. Can i have the same pathname but different posts?

       Convert decoded barcodes to ingredients via comparing to ingredients 
       database in MongoDB.

       Incorporate foodnacular API to list of ingredients

       Work on CSS and Bootstrap for layout of pages
 
# Comments by Ming
* "Finish the \ingredients post and make a get \ingredients. Can i have the same pathname but different posts?" => absolutely! Same route name but different HTTP verb => Good. 
